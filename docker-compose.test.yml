version: '3.8'

# Simplified Docker Compose for Testing CyberTask Docker Images

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: cybertask-postgres-test
    environment:
      POSTGRES_DB: cybertask_test
      POSTGRES_USER: cybertask
      POSTGRES_PASSWORD: cybertask_test_pass
    ports:
      - "5434:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U cybertask"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: cybertask-redis-test
    command: redis-server --requirepass redis_test_pass
    ports:
      - "6381:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API
  backend:
    image: cybertask-backend:latest
    container_name: cybertask-backend-test
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      NODE_ENV: production
      PORT: 3000
      DATABASE_URL: postgresql://cybertask:cybertask_test_pass@postgres:5432/cybertask_test
      REDIS_URL: redis://:redis_test_pass@redis:6379
      JWT_SECRET: test-jwt-secret-key-256-bits-long-for-testing-purposes-only
      JWT_REFRESH_SECRET: test-refresh-secret-key-256-bits-long-for-testing-purposes
      SESSION_SECRET: test-session-secret-key-256-bits-long-for-testing-purposes
      CORS_ORIGIN: http://localhost:3000,http://localhost:8083
    ports:
      - "3004:3000"
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3000/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend Application
  frontend:
    image: cybertask-frontend:latest
    container_name: cybertask-frontend-test
    depends_on:
      - backend
    environment:
      VITE_API_URL: http://localhost:3004/api
    ports:
      - "8083:8080"
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s